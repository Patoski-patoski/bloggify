name: Bloggify CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo
        ports:
          - 27017:27017
        options: >-
          --health-cmd mongosh --eval "db.adminCommand('ping')"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      matrix:
        node-version: [16.x, 18.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          cd backend
          npm ci

      - name: Check code formatting
        run: |
          cd backend
          npm run format:check || true

      - name: Lint code
        run: |
          cd backend
          npm run lint || true

      - name: Run tests
        run: |
          cd backend
          npm test
        env:
          CI: true
          NODE_ENV: test
          PORT: 3000
          MONGODB_URI: mongodb://localhost:27017/bloggify_test
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          REFRESH_JWT_SECRET: ${{ secrets.REFRESH_JWT_SECRET }}

      - name: Generate test coverage report
        run: |
          cd backend
          npm run test:coverage

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./backend/coverage

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - uses: actions/checkout@v3

      - name: Deploy to production
        run: |
          echo "Add your deployment steps here"
        env:
          DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}